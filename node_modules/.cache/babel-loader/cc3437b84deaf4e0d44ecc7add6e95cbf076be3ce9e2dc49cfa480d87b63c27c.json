{"ast":null,"code":"var _jsxFileName = \"/Users/joakimisaksson/Consid/Tests/astra/astra-search-cool-tv-shows/astra-z/src/Pages/404.tsx\";\nimport { Link, Typography } from '@mui/material';\nimport React from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotFound = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Can't find what you are looking for\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Go back to search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_c = NotFound;\nexport default NotFound;\nvar _c;\n$RefreshReg$(_c, \"NotFound\");","map":{"version":3,"names":["Link","Typography","React","NotFound"],"sources":["/Users/joakimisaksson/Consid/Tests/astra/astra-search-cool-tv-shows/astra-z/src/Pages/404.tsx"],"sourcesContent":["import { Link, Typography } from '@mui/material';\nimport React from 'react';\n\nconst NotFound = () => {\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"h5\">Can't find what you are looking for</Typography>\n\t\t\t<Link href=\"/\">\n\t\t\t\t<Typography>Go back to search</Typography>\n\t\t\t</Link>\n\t\t</>\n\t);\n};\n\nexport default NotFound;\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,UAAU,QAAQ,eAAe;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,MAAMC,QAAQ,GAAG,MAAM;EACtB,oBACC;IAAA,wBACC,QAAC,UAAU;MAAC,OAAO,EAAC,IAAI;MAAA,UAAC;IAAmC;MAAA;MAAA;MAAA;IAAA,QAAa,eACzE,QAAC,IAAI;MAAC,IAAI,EAAC,GAAG;MAAA,uBACb,QAAC,UAAU;QAAA,UAAC;MAAiB;QAAA;QAAA;QAAA;MAAA;IAAa;MAAA;MAAA;MAAA;IAAA,QACpC;EAAA,gBACL;AAEL,CAAC;AAAC,KATIA,QAAQ;AAWd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}